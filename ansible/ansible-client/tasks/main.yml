---
# tasks file for ansible-freeipa-client
#- name: copy change hostname bin
#  become: true
#  become_method: sudo
#  copy: src=/etc/ansible/ansible-client/copy_configuration/hostname  dest=/root/  mode=a+x

#- name: execute change hostname
#  become: true
#  become_method: sudo
#  command: sh /root/hostname

#- name: delete hostname bin
#  become: true
#  become_method: sudo
#  file:
#    state: absent
#    path: /root/hostname



#- name: change hostname
#  become: true
#  become_method: sudo
#  shell: y=$(hostname);hostnamectl set-hostname "${y,,}.linux.avivaid.local";su - $(whoami);
#  args:
#   warn: False

#- name: change hostname
#  become: true
#  become_method: sudo
#  shell: | 
#    y=$(hostname)
#    hostnamectl set-hostname "${y,,}.linux.avivaid.local"
#    ssh $(whoami)@localhost
    
#    expect "password:"
#    send "redhat123\n"
#  args:
#   warn: False

#- name: exec bash
#  become: true
#  become_method: sudo
#  shell: exec bash
#  args:
#   warn: False

- name: Assert supported distribution
  tags:
    - assertion
    - freeipaclient
  assert:
    that:
      - ansible_distribution + '-' + ansible_distribution_major_version in freeipaclient_supported_distributions

- name: Assert required variables
  tags:
    - assertion
    - freeipaclient
  assert:
    that:
      - freeipaclient_server is defined
      - freeipaclient_server_replica is defined
      - freeipaclient_domain is defined
      - freeipaclient_enroll_user is defined
      - freeipaclient_enroll_pass is defined

- name: Import variables
  tags:
    - import
    - freeipaclient
  include_vars: "{{ ansible_distribution }}.yml"

- name: Set DNS server
  tags:
    - dns
    - freeipaclient
  become: true
  when: freeipaclient_dns_server is defined
  lineinfile:
    state: present
    line: "nameserver {{ freeipaclient_dns_server }}"
    dest: /etc/resolv.conf

- name: Update yum cache
  tags:
    - packagemanagement
    - freeipaclient
  become: true
  when: ansible_pkg_mgr  == 'apt'
  apt:
    update_cache: true
    cache_valid_time: 3600

- name: Install required packages
  tags:
    - packagemanagement
    - freeipaclient
  become: true
  with_items: "{{ freeipaclient_packages }}"
  package:
    state: present
    name: "{{ item }}"

- name: Check if host is enrolled
  tags:
    - enroll
    - freeipaclient
  register: freeipaclient_ipaconf
  check_mode: no
  stat:
    path: /etc/ipa/default.conf

- name: Enroll host in domain
  tags:
    - enroll
    - freeipaclient
  become: true
  when: not freeipaclient_ipaconf.stat.exists
  command: >
    {{ freeipaclient_install_command }}
    {{'--hostname=' + freeipaclient_hostname  if freeipaclient_hostname is defined else '--hostname=' + ansible_nodename }}
    --server={{ freeipaclient_server }}
    --server={{ freeipaclient_server_replica }}
    --domain={{ freeipaclient_domain }}
    --realm={{ freeipaclient_realm }}
    --principal={{ freeipaclient_enroll_user }}
    --password={{ freeipaclient_enroll_pass }}
    --mkhomedir
    {{ '--enable-dns-updates' if freeipaclient_enable_dns_updates else ''}}
    --unattended
    {{ '--no-ntp' if not freeipaclient_enable_ntp else ''}}
    {{ '--all-ip-addresses' if freeipaclient_all_ip_addresses else ''}}
    {{ '--force-join' if freeipaclient_force_join else ''}}

- name: Executing a sudo authconfig for enablemkhomedir
  command: authconfig --enablemkhomedir --update
  become: true
  become_method: sudo

- name: Ansible copy directory to the remote server
  copy:
    src: /etc/ansible/ansible-client/copy_configuration/sssd.conf
    dest: /etc/sssd/sssd.conf
  become: yes

- name: Ansible copy directory to the remote server
  copy:
    src: /etc/ansible/ansible-client/copy_configuration/krb5.conf
    dest: /etc/krb5.conf
  become: yes

- name: ssssd
  become: true
  become_method: sudo
  shell: hst="ipa_hostname = $(hostname -f)"; sed -i "s/idmaviva/$hst/g" /etc/sssd/sssd.conf
  args:
   warn: False

- name: ssssd2
  become: true
  become_method: sudo
  shell: name=$(hostname -f);ldp="ldap_sasl_authid = host/$name"; sed -i "s|ldp|$ldp|g" /etc/sssd/sssd.conf
  args:
   warn: False

- name: stop service sssd
  command:  service sssd stop
  become: true
  become_method: sudo
  args:
   warn: False

- name: clear cache ldap
  shell: rm -rf /var/lib/sss/db/*
  become: true
  become_method: sudo
  args:
   warn: False

- name: start service sssd
  command:  service sssd start
  become: true
  become_method: sudo
  args:
   warn: False

- name: Include Ubuntu specific tasks
  tags:
    - ubuntu
    - freeipaclient
  when: ansible_os_family == 'Debian'

  include_tasks: ubuntu.yml
